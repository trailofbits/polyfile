#!/bin/sh

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local sha1> <remote ref> <remote sha1>
#
# This sample shows how to prevent push of commits where the log message starts
# with "WIP" (work in progress).

#remote="$1"
#url="$2"
#
#z40=0000000000000000000000000000000000000000
#
#while read local_ref local_sha remote_ref remote_sha
#do
#	if [ "$local_sha" = $z40 ]
#	then
#		# Handle delete
#		:
#	else
#		if [ "$remote_sha" = $z40 ]
#		then
#			# New branch, examine all commits
#			range="$local_sha"
#		else
#			# Update to existing branch, examine new commits
#			range="$remote_sha..$local_sha"
#		fi
#
#		# Check for WIP commit
#		commit=`git rev-list -n 1 --grep '^WIP' "$range"`
#		if [ -n "$commit" ]
#		then
#			echo >&2 "Found WIP commit in $local_ref, not pushing"
#			exit 1
#		fi
#	fi
#done

# We could do the following as a `pre-commit` hook, but it's expensive, so only do it pre-push:
echo Linting Python code...
flake8 polyfile tests --exclude polyfile/kaitai/parsers/ --select=E9,F63,F7,F82 1>/dev/null 2>/dev/null
RESULT=$?
if [ $RESULT -ne 0 ]; then
  cat <<\EOF
Failed Python lint:

    flake8 polyfile tests --exclude polyfile/kaitai/parsers/ --count --select=E9,F63,F7,F82 --show-source --statistics
EOF
  exit 1
fi

#flake8 polyfile tests --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics 1>/dev/null 2>/dev/null
#RESULT=$?
#if [ $RESULT -ne 0 ]; then
#  cat <<\EOF
#Failed Python lint:
#
#    flake8 polyfile tests --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#EOF
#  exit 1
#fi

echo Running Tests...
pytest tests

# echo Type-checking Python code...
# mypy --ignore-missing-imports polyfile tests
#exit $?
